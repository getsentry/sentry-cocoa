name: UI Tests Common

on:
  workflow_call:
    inputs:
      fastlane_command:
        description: "The fastlane command to run"
        required: true
        type: string
      fastlane_command_extra_arguments:
        description: "Extra arguments for the fastlane command"
        required: false
        default: ""
        type: string
      xcresult_suffix:
        description: "Suffix for the xcresult artifact (if needed)"
        required: false
        default: ""
        type: string
      xcode_version:
        description: "Xcode version"
        required: true
        type: string
      build_with_make:
        description: "Build with make"
        required: false
        default: false
        type: boolean
      macos_version:
        description: "macOS version"
        required: true
        type: string
      needs_xcframework:
        description: "Whether the workflow needs to download the XCFramework."
        required: false
        default: false
        type: boolean

jobs:
  common-ui-tests:
    name: UI Tests Common
    runs-on: ${{ inputs.macos_version }}
    steps:
      - uses: actions/checkout@v4

      - name: Print hardware info
        shell: bash
        run: system_profiler SPHardwareDataType

      - name: Setup Ruby
        uses: ruby/setup-ruby@13e7a03dc3ac6c3798f4570bfead2aed4d96abfb # v1.244.0
        with:
          bundler-cache: true

      - run: ./scripts/ci-select-xcode.sh ${{ inputs.xcode_version }}

      - run: make init-ci-build
        if: ${{ inputs.build_with_make }}

      - run: make xcode
        if: ${{ inputs.build_with_make }}

      - name: Add Microphone permissions
        uses: ./.github/actions/add-microphone-permissions

      - name: Download XCFramework
        if: ${{ inputs.needs_xcframework }}
        uses: actions/download-artifact@v4
        with:
          name: xcframework-${{github.sha}}-sentry-static-uitests
          path: Carthage/

      - name: Unzip XCFramework
        if: ${{ inputs.needs_xcframework }}
        run: |
          unzip -o Carthage/Sentry.xcframework.zip -d Carthage/

      - name: Run Fastlane
        run: bundle exec fastlane ${{ inputs.fastlane_command }} ${{ inputs.fastlane_command_extra_arguments }}

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@65fe03598d8d251738592a497a9e8547a5c48eaa # v5.6.0
        if: always()
        with:
          report_paths: "build/reports/junit.xml"
          fail_on_failure: true
          fail_on_parse_error: true
          detailed_summary: true

      - name: Upload Result Bundle
        uses: actions/upload-artifact@v4
        if: ${{ failure() }}
        with:
          name: ${{ inputs.fastlane_command }}${{inputs.xcresult_suffix}}
          path: fastlane/test_results/${{ inputs.fastlane_command }}.xcresult

      - name: Archiving Raw Test Logs
        uses: actions/upload-artifact@v4
        if: ${{ failure() || cancelled() }}
        with:
          name: ${{ inputs.fastlane_command }}${{inputs.xcresult_suffix}}_raw_output
          path: |
            ~/Library/Logs/scan/*.log
            ./fastlane/test_output/**

      - name: Store screenshot
        uses: ./.github/actions/capture-screenshot
        if: failure()
