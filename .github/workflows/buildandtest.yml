name: Build & Test
on:
  push:
    branches:
      - master
      - release/**
  pull_request:

jobs:
  unit-tests:
    name: Unit Tests ${{matrix.name}}
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        
        include:
          # SentrySystemEventsBreadcrumbsTest only run on Catalyst and iOS
          # so the coverage report shows a reduced coverage.
          - name: macOS 11
            os: macos-11  
            xcode: 12.5.1
            destination: platform=macOS
            pushCodecov: false

          - name: macOS 10.15
            os: macos-10.15
            xcode: 12.4
            destination: platform=macOS
            pushCodecov: false
            
          - name: Mac Catalyst Mac OS 11
            os: macos-11
            xcode: 12.5.1
            destination: platform=macOS,variant=Mac Catalyst  
            pushCodecov: true

          - name: Mac Catalyst Mac OS 10.15
            os: macos-10.15
            xcode: 12.4
            destination: platform=macOS,variant=Mac Catalyst 
            pushCodecov: false

          - name: iOS latest
            os: macos-11
            xcode: 12.5.1
            destination: platform=iOS Simulator,OS=latest,name=iPhone 11 Pro
            pushCodecov: true

          - name: iOS 13.7
            os: macos-11
            xcode: 11.7
            destination: platform=iOS Simulator,OS=13.7,name=iPhone 11 Pro
            pushCodecov: true

          - name: tvOS latest
            os: macos-11
            xcode: 12.5.1
            destination: platform=tvOS Simulator,OS=latest,name=Apple TV 4K
            pushCodecov: false

          - name: tvOS 13.4
            os: macos-11
            xcode: 11.7
            destination: platform=tvOS Simulator,OS=13.4,name=Apple TV 4K
            pushCodecov: false 

          # Can't run tests on watchOS because XCTest is not available  

    steps:
      - uses: actions/checkout@v2
      - run: ./scripts/ci-select-xcode.sh ${{matrix.xcode}}
      - name: Running tests
        run: >-
          xcodebuild 
          -workspace Sentry.xcworkspace 
          -scheme Sentry 
          -configuration Release 
          GCC_GENERATE_TEST_COVERAGE_FILES=YES 
          GCC_INSTRUMENT_PROGRAM_FLOW_ARCS=YES
          -destination "${{matrix.destination}}" 
          test | xcpretty -t && exit ${PIPESTATUS[0]}

      # We can upload all coverage reports, because codecov merges them.
      # See https://docs.codecov.io/docs/merging-reports
      # Checkout .codecov.yml to see the config of Codecov
      - name: Push code coverage to codecov
        uses: codecov/codecov-action@v1
        if: ${{matrix.pushCodecov}}

  ui-tests:
    name: Run UI Tests
    runs-on: macos-11

    steps:
      - uses: actions/checkout@v2
      - run: ./scripts/ci-select-xcode.sh
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.7'

      - name: Setup fastlane
        run: bundle install

      - name: Run Fastlane
        run: bundle exec fastlane ui_tests
        shell: sh

  # We had issues that the release build was broken on master.
  # With this we catch potential issues already in the PR.
  ios-swift-release:
    name: Make a release build of iOS Swift
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v2
      - run: ./scripts/ci-select-xcode.sh
  
      - uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.7'

      - name: Setup fastlane
        run: bundle install   

      - name: Run Fastlane
        env:
          APP_STORE_CONNECT_KEY_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          APP_STORE_CONNECT_KEY: ${{ secrets.APP_STORE_CONNECT_KEY }}
          FASTLANE_KEYCHAIN_PASSWORD: ${{ secrets.FASTLANE_KEYCHAIN_PASSWORD }}
          MATCH_GIT_PRIVATE_KEY: ${{ secrets.MATCH_GIT_PRIVATE_KEY }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_USERNAME: ${{ secrets.MATCH_USERNAME }}
        run: |
          bundle exec fastlane build_ios_swift
        shell: sh

  build-sample:
    name: Sample ${{ matrix.scheme }}
    runs-on: macos-11
    strategy:
      fail-fast: false
      matrix:
        beforeXcode: ['']
        scheme:
          - macOS-Swift
        # other sample projects are built in ui-tests

        # WatchOS needs Sentry as a XCFramework  
        include:
          - scheme: watchOS-Swift WatchKit App
            beforeXcode: 'make build-for-watchos'

    steps:
      - uses: actions/checkout@v2
      - run: ./scripts/ci-select-xcode.sh
      - run: ${{matrix.beforeXcode}}
      
      # Disable code signing. We just want to make sure these compile.
      - run: >-
          xcodebuild
          -workspace Sentry.xcworkspace
          -scheme '${{matrix.scheme}}'
          -configuration Debug
          CODE_SIGNING_ALLOWED="NO"
          build

  validate-podspec:
    name: Validate Podspec
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v2
      - name: Validate Podspec
        run: pod lib lint
        shell: sh

  build-carthage:
    name: Build & Validate Carthage
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v2
      - run: make build-carthage
        shell: sh 
      - run: make build-carthage-sample-framework
        shell: sh  
      - run: make build-carthage-sample-xcframework
        shell: sh  

      - name: Archiving Carthage zips
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.sha }}
          path: |
            ${{ github.workspace }}/*.zip
 
# Use github.event.pull_request.head.sha instead of github.sha when available as 
# the github.sha is be the pre merge commit id for PRs.
# See https://github.community/t/github-sha-isnt-the-value-expected/17903/17906.
  validate-spm:
    name: Validate Swift Package Manager
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v2
      - name: Set SPM revision to current git commit
        run: >-
          if [[ "${{ github.event.pull_request.head.sha }}" != "" ]]; then
            sed -i '' 's/.branch("master")/.revision("${{ github.event.pull_request.head.sha }}")/g' Samples/macOS-SPM-CommandLine/Package.swift
          else
            sed -i '' 's/.branch("master")/.revision("${{ github.sha }}")/g' Samples/macOS-SPM-CommandLine/Package.swift
          fi  
        shell: bash
      - run: swift build
        working-directory: Samples/macOS-SPM-CommandLine
        shell: sh

  swift-build:
    name: Build with Swift
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v2
      - run: swift build
        shell: sh
