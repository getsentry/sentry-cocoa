name: UI Tests
on:
  push:
    branches:
      - main

  pull_request:
    paths:
      - "Sources/**"
      - "Tests/**"
      - ".github/workflows/ui-tests.yml"
      - "fastlane/**"
      - ".sauce/config.yml"
      - "scripts/ci-select-xcode.sh"
      - "Samples/iOS-Swift/**"

# https://docs.github.com/en/actions/using-jobs/using-concurrency#example-using-a-fallback-value
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  ui-tests:
    name: UI Tests for ${{matrix.target}} on Simulators
    runs-on: macos-13
    strategy:
      matrix:
        target: ["ios_objc", "tvos_swift"]

    steps:
      - uses: actions/checkout@v4
      - run: ./scripts/ci-select-xcode.sh

      # GitHub Actions sometimes fail to launch the UI tests. Therefore we retry
      - name: Run Fastlane
        id: run-fastlane
        run: set -eou pipefail && fastlane ui_tests_${{matrix.target}} 2>&1 | tee fastlane.log
        continue-on-error: true

      - name: Recovery - Check if the test runner never began executing
        id: check-if-test-should-be-retried
        if: ${{ steps.run-fastlane.outcome == 'failure' }}
        uses: actions/github-script@v7
        with:
          script: |
            const script = require('./scripts/ci/detect-fastlane-ui-test-timeout.js');
            script({ github, context, core }, 'fastlane.log');

      - name: Recovery - Capture Spindump on Failure
        if: ${{ steps.check-if-test-should-be-retried.outputs.RETRY_TEST == 'true' }}
        run: |
          ./scripts/ci/create-xctest-spindump.sh

      - name: Recovery - Upload Spindump (if available)
        if: ${{ steps.check-if-test-should-be-retried.outputs.RETRY_TEST == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: ui-tests-${{matrix.target}}-spindump
          path: spindump.txt

      - name: Recovery - Run Fastlane again
        id: run-fastlane-retry-1
        if: ${{ steps.check-if-test-should-be-retried.outputs.RETRY_TEST == 'true' }}
        run: fastlane ui_tests_${{matrix.target}}

      - name: Archiving Raw Test Logs
        uses: actions/upload-artifact@v4
        if: ${{ failure() || cancelled() }}
        with:
          name: ui-tests-${{matrix.target}}-raw-test-output
          path: |
            ~/Library/Logs/scan/*.log
            ./fastlane/test_output/**

  # SwiftUI only supports iOS 14+ so we run it in a separate matrix here
  ui-tests-swift-ui:
    name: UI Tests for SwiftUI on ${{matrix.device}} Simulator
    runs-on: ${{matrix.runs-on}}
    strategy:
      fail-fast: false
      matrix:
        include:
          - runs-on: macos-13
            xcode: "14.3"
            device: "iPhone 8 (16.1)"
    steps:
      - uses: actions/checkout@v4
      - run: ./scripts/ci-select-xcode.sh ${{matrix.xcode}}

      # GitHub Actions sometimes fail to launch the UI tests. Therefore we retry
      - name: Run Fastlane
        id: run-fastlane
        run: set -eou pipefail && fastlane ui_tests_ios_swiftui device:"${{matrix.device}}" 2>&1 | tee fastlane.log
        continue-on-error: true

      - name: Recovery - Check if the test runner never began executing
        id: check-if-test-should-be-retried
        if: ${{ steps.run-fastlane.outcome == 'failure' }}
        uses: actions/github-script@v7
        with:
          script: |
            const script = require('./scripts/ci/detect-fastlane-ui-test-timeout.js');
            script({ github, context, core }, 'fastlane.log');

      - name: Recovery - Capture Spindump on Failure
        if: ${{ steps.check-if-test-should-be-retried.outputs.RETRY_TEST == 'true' }}
        run: |
          ./scripts/ci/create-xctest-spindump.sh

      - name: Recovery - Upload Spindump (if available)
        if: ${{ steps.check-if-test-should-be-retried.outputs.RETRY_TEST == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: ui-tests-swift-ui-${{matrix.xcode}}-${{matrix.device}}-spindump
          path: spindump.txt

      - name: Recovery - Run Fastlane again
        id: run-fastlane-retry-1
        if: ${{ steps.check-if-test-should-be-retried.outputs.RETRY_TEST == 'true' }}
        run: fastlane ui_tests_ios_swiftui device:"${{matrix.device}}"

      - name: Archiving Raw Test Logs
        uses: actions/upload-artifact@v4
        if: ${{  failure() || cancelled() }}
        with:
          name: ui-tests-swift-ui-${{matrix.xcode}}-${{matrix.device}}-raw-test-output
          path: |
            ~/Library/Logs/scan/*.log
            ./fastlane/test_output/**

  ui-tests-swift:
    name: UI Tests for iOS-Swift ${{matrix.device}} Simulator
    runs-on: ${{matrix.runs-on}}
    strategy:
      fail-fast: false
      matrix:
        include:
          - runs-on: macos-13
            xcode: "15.2"
            device: "iPhone 14 (16.4)"

          - runs-on: macos-14
            xcode: "15.4"
            device: "iPhone 15 (17.2)"
    steps:
      - uses: actions/checkout@v4
      - run: ./scripts/ci-select-xcode.sh ${{matrix.xcode}}

      - name: Create iOS 16.4 simulator
        if: ${{ matrix.device == 'iPhone 14 (16.4)' }}
        run: ./scripts/create-simulator.sh 14.3.1 16.4 "iPhone 14" true

      - name: Run Fastlane
        id: run-fastlane
        run: set -eou pipefail && fastlane ui_tests_ios_swift device:"${{matrix.device}}" 2>&1 | tee fastlane.log
        continue-on-error: true

      - name: Recovery - Check if the test runner never began executing
        id: check-if-test-should-be-retried
        if: ${{ steps.run-fastlane.outcome == 'failure' }}
        uses: actions/github-script@v7
        with:
          script: |
            const script = require('./scripts/ci/detect-fastlane-ui-test-timeout.js');
            script({ github, context, core }, 'fastlane.log');

      - name: Recovery - Capture Spindump on Failure
        if: ${{ steps.check-if-test-should-be-retried.outputs.RETRY_TEST == 'true' }}
        run: |
          ./scripts/ci/create-xctest-spindump.sh

      - name: Recovery - Upload Spindump (if available)
        if: ${{ steps.check-if-test-should-be-retried.outputs.RETRY_TEST == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: ui-tests-swift-${{matrix.xcode}}-${{matrix.device}}-spindump
          path: spindump.txt

      - name: Recovery - Run Fastlane again
        id: run-fastlane-retry-1
        if: ${{ steps.check-if-test-should-be-retried.outputs.RETRY_TEST == 'true' }}
        run: fastlane ui_tests_ios_swift device:"${{matrix.device}}"

      - name: Archiving Raw Test Logs
        uses: actions/upload-artifact@v4
        if: ${{  failure() || cancelled() }}
        with:
          name: ui-tests-swift-${{matrix.xcode}}-${{matrix.device}}-raw-test-output
          path: |
            ~/Library/Logs/scan/*.log
            ./fastlane/test_output/**

  ui-tests-swift6:
    name: UI Tests for iOS-Swift6 Simulator
    runs-on: macos-15

    steps:
      - uses: actions/checkout@v4
      - run: ./scripts/ci-select-xcode.sh "16.2"
      - name: Run Fastlane
        id: run-fastlane
        run: set -eou pipefail && fastlane ui_tests_ios_swift6 2>&1 | tee fastlane.log
        continue-on-error: true

      - name: Recovery - Check if the test runner never began executing
        id: check-if-test-should-be-retried
        if: ${{ steps.run-fastlane.outcome == 'failure' }}
        uses: actions/github-script@v7
        with:
          script: |
            const script = require('./scripts/ci/detect-fastlane-ui-test-timeout.js');
            script({ github, context, core }, 'fastlane.log');

      - name: Recovery - Capture Spindump on Failure
        if: ${{ steps.check-if-test-should-be-retried.outputs.RETRY_TEST == 'true' }}
        run: |
          ./scripts/ci/create-xctest-spindump.sh

      - name: Recovery - Upload Spindump (if available)
        if: ${{ steps.check-if-test-should-be-retried.outputs.RETRY_TEST == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: ui-tests-swift6-spindump
          path: spindump.txt

      - name: Recovery - Run Fastlane again
        id: run-fastlane-retry-1
        if: ${{ steps.check-if-test-should-be-retried.outputs.RETRY_TEST == 'true' }}
        run: fastlane ui_tests_ios_swift6

      - name: Archiving Raw Test Logs
        uses: actions/upload-artifact@v4
        if: ${{ failure() || cancelled() }}
        with:
          name: ui-tests-swift6-raw-test-output
          path: |
            ~/Library/Logs/scan/*.log
            ./fastlane/test_output/**

  duplication-tests:
    name: UI Tests for project with Sentry duplicated
    runs-on: macos-15

    steps:
      - uses: actions/checkout@v4
      - run: ./scripts/ci-select-xcode.sh "16.2"
      - run: ./scripts/build-xcframework.sh gameOnly
      - name: Run Fastlane
        id: run-fastlane
        run: set -eou pipefail && fastlane duplication_test 2>&1 | tee fastlane.log
        continue-on-error: true

      - name: Recovery - Check if the test runner never began executing
        id: check-if-test-should-be-retried
        if: ${{ steps.run-fastlane.outcome == 'failure' }}
        uses: actions/github-script@v7
        with:
          script: |
            const script = require('./scripts/ci/detect-fastlane-ui-test-timeout.js');
            script({ github, context, core }, 'fastlane.log');

      - name: Recovery - Capture Spindump on Failure
        if: ${{ steps.check-if-test-should-be-retried.outputs.RETRY_TEST == 'true' }}
        run: |
          ./scripts/ci/create-xctest-spindump.sh

      - name: Recovery - Upload Spindump (if available)
        if: ${{ steps.check-if-test-should-be-retried.outputs.RETRY_TEST == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: duplication-test-spindump
          path: spindump.txt

      - name: Recovery - Run Fastlane again
        id: run-fastlane-retry-1
        if: ${{ steps.check-if-test-should-be-retried.outputs.RETRY_TEST == 'true' }}
        run: fastlane duplication_test

      - name: Archiving Raw Test Logs
        uses: actions/upload-artifact@v4
        if: ${{  failure() || cancelled() }}
        with:
          name: duplication-test-raw-ios-swift-test-output
          path: |
            ~/Library/Logs/scan/*.log
            ./fastlane/test_output/**
