name: Test
on:
  push:
    branches:
      - main
      - release/**

  pull_request:
    paths:
      - "Sources/**"
      - "Tests/**"
      - "test-server/**"
      - "Samples/**"
      - ".github/workflows/test.yml"
      - "fastlane/**"
      - "scripts/tests-with-thread-sanitizer.sh"
      - "scripts/ci-select-xcode.sh"
      - "scripts/xcode-test.sh"
      - ".codecov.yml"
      - Sentry.xcodeproj

      # run the workflow any time an Xcode scheme changes for a sample app
      - "Samples/tvOS-Swift/tvOS-Swift.xcodeproj/xcshareddata/xcschemes/tvOS-Swift.xcscheme"
      - "Samples/iOS-Swift/iOS-Swift.xcodeproj/xcshareddata/xcschemes/iOS13-Swift.xcscheme"
      - "Samples/iOS-Swift/iOS-Swift.xcodeproj/xcshareddata/xcschemes/iOS-SwiftUITests.xcscheme"
      - "Samples/iOS-Swift/iOS-Swift.xcodeproj/xcshareddata/xcschemes/iOS-Swift.xcscheme"
      - "Samples/macOS-Swift/macOS-Swift.xcodeproj/xcshareddata/xcschemes/macOS-Swift.xcscheme"
      - "Samples/iOS-ObjectiveC/iOS-ObjectiveC.xcodeproj/xcshareddata/xcschemes/iOS-ObjectiveC.xcscheme"

jobs:
  build-test-server:
    name: Build test server
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4
      - name: Cache for Test Server
        id: cache_test_server
        uses: actions/cache@v3
        with:
          path: ./test-server/.build
          key: test-server-${{ hashFiles('./test-server') }}
          restore-keys: |
            test-server-${{ hashFiles('./test-server') }}
            test-server-

      - name: Build Test Server
        if: steps.cache_test_server.outputs.cache-hit != 'true'
        working-directory: test-server
        run: >-
          swift build -c release 2>&1 | tee test-server-build.log

      - name: Copy exec
        working-directory: test-server
        run: cp $(swift build --show-bin-path -c release)/Run test-server-exec

      - name: Archiving DerivedData
        uses: actions/upload-artifact@v3
        with:
          name: test-server
          path: |
            ./test-server/test-server-exec

      - name: Archiving Raw Test Logs
        uses: actions/upload-artifact@v3
        if: ${{  failure() || cancelled() }}
        with:
          name: test-server-build-log-${{matrix.platform}}-xcode-${{matrix.xcode}}-os-${{matrix.test-destination-os}}
          path: |
            raw-test-output.log

  # We don't run all unit tests with Thread Sanitizer enabled because
  # that adds a significant overhead.
  thread-sanitizer:
    name: Unit iOS - Thread Sanitizer
    runs-on: macos-13
    # When there are threading issues the tests sometimes keep hanging
    timeout-minutes: 40
    needs: [build-test-server]

    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v3
        with:
          name: test-server

      - name: Allow test-server to run
        run: chmod +x ./test-server-exec

      - run: ./test-server-exec &

      - run: ./scripts/ci-select-xcode.sh

      - name: Running tests with ThreadSanitizer
        run: ./scripts/tests-with-thread-sanitizer.sh

      - name: Archiving Test Logs
        uses: actions/upload-artifact@v3
        if: ${{  failure() || cancelled() }}
        with:
          name: thread-sanitizer
          path: thread-sanitizer.log
