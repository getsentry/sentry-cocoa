name: Release
run-name: Release ${{ github.event.inputs.version }}

# TODO: change this to dispatch the build-xcframework.yml workflow, and then depend on it here with the workflow dependency setup described at https://stackoverflow.com/a/64733705

on:
  workflow_dispatch:
    inputs:
      version:
        description: Version to release
        required: true
      force:
        description: Force a release even when there are release-blockers (optional)
        required: false
      merge_target:
        description: Target branch to merge into. Uses the default branch as a fallback (optional)
        required: false

jobs:

  build-xcframework-slices:
    name: Build ${{matrix.variant.name}}${{matrix.variant.suffix}} XCFramework Slice for ${{matrix.sdk}}
    # We must compile this on an arm64 runner, cause it's required for visionOS. macos-14 uses arm64.
    # To see the available runners see https://docs.github.com/en/actions/using-github-hosted-runners/using-github-hosted-runners/about-github-hosted-runners#standard-github-hosted-runners-for-public-repositories.
    runs-on: macos-14
    strategy:
      matrix:
        sdk: [iphoneos, iphonesimulator, macosx, appletvos, appletvsimulator, watchos, watchsimulator, xros, xrsimulator]
        variant:
          - name: Sentry
            suffix: "-Dynamic"
            id: sentry-dynamic
          - name: Sentry
            macho-type: staticlib
            id: sentry-static
          - name: SentrySwiftUI
            id: sentryswiftui
          - name: Sentry
            suffix: "-WithoutUIKitOrAppKit"
            macho-type: mh_dylib
            configuration-suffix: WithoutUIKit
            id: sentry-withoutuikit-dynamic
    steps:
      - uses: actions/checkout@v4

      # We have to compile on Xcode 15.2 because compiling on Xcode 15.4 fails with
      # Data+SentryTracing.swift:21:62: error: 'ReadingOptions' aliases 'Foundation.ReadingOptions'
      # and cannot be used here because C++ types from imported module 'Foundation' do not support
      # library evolution; this is an error in the Swift 6 language mode
      # We also can't use Xcode 16.x because validating the XCFramework then fails with Xcode 15.x.
      - run: ./scripts/ci-select-xcode.sh 15.2

      - name: Build xcframework
        if: startsWith(github.ref, 'refs/heads/release/') == false
        run: ./scripts/build-xcframework-slice.sh ${{matrix.sdk}} ${{matrix.variant.name}} "${{matrix.variant.suffix}}" ${{matrix.variant.macho-type}} ${{matrix.variant.configuration-suffix}}
        shell: sh
      - name: Remove Sentry.framework from SentrySwiftUI build
        if: matrix.variant.name == 'SentrySwiftUI'
        run: |
          find "${{github.workspace}}/Carthage/archive" -name "Sentry.framework" -print0 | xargs -t0 rm -rf
          find "${{github.workspace}}/Carthage/archive" -name "Sentry.framework.dSYM" -print0 | xargs -t0 rm -rf
      - name: Archiving xcarchive
        uses: actions/upload-artifact@v4
        with:
          name: xcframework-${{matrix.variant.id}}-slice-${{matrix.sdk}}
          if-no-files-found: error
          path: |
            ${{github.workspace}}/Carthage/archive/${{matrix.variant.name}}${{matrix.variant.suffix}}/${{matrix.sdk}}.xcarchive
      - name: Archive build log if failed
        uses: actions/upload-artifact@v4
        if: ${{ failure() || cancelled() }}
        with:
          name: raw-build-output-build-xcframework-${{matrix.variant.id}}-${{matrix.sdk}}
          path: |
            *.log

  assemble-xcframeworks:
    name: Assemble ${{matrix.variant.name}}${{matrix.variant.suffix}}.xcframework
    runs-on: macos-14
    needs: build-xcframework-slices
    strategy:
      matrix:
        variant:
          - name: Sentry
            suffix: "-Dynamic"
            id: sentry-dynamic
          - name: Sentry
            macho-type: staticlib
            id: sentry-static
          - name: SentrySwiftUI
            id: sentryswiftui
          - name: Sentry
            suffix: "-WithoutUIKitOrAppKit"
            macho-type: dylib
            configuration-suffix: WithoutUIKit
            id: sentry-withoutuikit-dynamic
    steps:
      - uses: actions/checkout@v4
      - name: Download ${{matrix.variant.id}} Slices
        uses: actions/download-artifact@v4
        with:
          pattern: xcframework-${{matrix.variant.id}}-slice-*
          path: xcframework-slices
      - name: Assemble XCFramework
        run: ./scripts/assemble-xcframework.sh "${{github.workspace}}/xcframework-slices" "${{matrix.variant.name}}${{matrix.variant.suffix}}"
      - name: Archive XCFramework
        uses: actions/upload-artifact@v4
        with:
          name: xcframework-${{github.sha}}-${{matrix.variant.id}}
          if-no-files-found: error
          path: ${{matrix.variant.name}}${{matrix.variant.suffix}}.xcframework.zip

  job_release:
    runs-on: ubuntu-latest
    name: "Release a new version"
    needs: prepare_framework
    steps:
      - name: Get auth token
        id: token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2.0.6
        with:
          app-id: ${{ vars.SENTRY_RELEASE_BOT_CLIENT_ID }}
          private-key: ${{ secrets.SENTRY_RELEASE_BOT_PRIVATE_KEY }}
      - name: Check out current commit (${{ github.sha }})
        uses: actions/checkout@v4
        with:
          token: ${{ steps.token.outputs.token }}
          fetch-depth: 0

      - uses: actions/download-artifact@v4
        with:
          name: xcframework-${{github.sha}}-*

      # update-package-sha.sh uses this env variable to update Package.swift.
      # During release Craft calls bump.sh that uses update-package-sha.sh.
      - run: export GITHUB_RUN_ID=${{ github.run_id }}

      - name: Prepare release
        uses: getsentry/action-prepare-release@v1
        env:
          GITHUB_TOKEN: ${{ steps.token.outputs.token }}
        with:
          version: ${{ github.event.inputs.version }}
          force: ${{ github.event.inputs.force }}
          merge_target: ${{ github.event.inputs.merge_target }}
