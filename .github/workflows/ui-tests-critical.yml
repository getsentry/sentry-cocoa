name: UI Tests Critical
on:
  push:
    branches:
      - main

  pull_request:
    paths:
      - "Sources/**"
      - ".github/workflows/ui-tests-critical.yml"
      - "fastlane/**"
      - "TestSamples/**"
      - "**/*.xctestplan"
      # Explicitly list used scripts to avoid unnecessary runs
      - "scripts/ci-boot-simulator.sh"
      - "scripts/ci-select-xcode.sh"

# https://docs.github.com/en/actions/using-jobs/using-concurrency#example-using-a-fallback-value
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build-sample:
    name: Build SwiftUITestSample Sample
    runs-on: macos-15
    steps:
      - uses: actions/checkout@v4

      - name: Print hardware info
        run: system_profiler SPHardwareDataType
      - run: ./scripts/ci-select-xcode.sh "16.2"
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - run: bundle exec fastlane build_ios_swift_ui_test_sample
      - uses: actions/upload-artifact@v4
        with:
          name: SwiftUITestSample
          path: TestSamples/SwiftUITestSample/DerivedData/Build/Products/Debug-iphonesimulator/SwiftUITestSample.app
          # If no files are found, fail the job with an error, because they are required for the next step
          if-no-files-found: error

  run-tests:
    name: Test iOS on Xcode ${{matrix.platform.xcode}} - ${{matrix.test.name}} - V3 # Up the version with every change to keep track of flaky tests
    needs: [build-sample]
    runs-on: ${{matrix.platform.runs-on}}
    env:
      APP_ARTIFACT_NAME: "SwiftUITestSample"
      APP_PATH: "Sample.app"
      MAESTRO_LOGS_PATH: "MaestroLogs"
      MAESTRO_DRIVER_STARTUP_TIMEOUT: 1500000 # 25 min, CI can be slow at times
    strategy:
      fail-fast: false
      matrix:
        platform:
          # As of 25th March 2025, the preinstalled iOS simulator version is 16.4 for macOS 13 and Xcode 14.3.1; see
          # https://github.com/actions/runner-images/blob/main/images/macos/macos-13-Readme.md#installed-sdks
          - runs-on: macos-13
            xcode: "14.3.1"

          # macos-14 iOS 17 not included due to the XCUIServerNotFound errors causing flaky tests

          # As of 25th March 2025, the preinstalled iOS simulator version is 18.2 for macOS 15 and Xcode 16.2; see
          # https://github.com/actions/runner-images/blob/main/images/macos/macos-15-Readme.md#installed-sdks
          - runs-on: macos-15
            xcode: "16.2"
        test:
          - name: "Crash"
            maestro_flows_path: "TestSamples/SwiftUITestSample/Maestro/crash.yaml"
          - name: "CorruptEnvelope"
            maestro_flows_path: "TestSamples/SwiftUITestSample/Maestro/corruptEnvelope.yaml"

    steps:
      - uses: actions/checkout@v4

      - name: Print hardware info
        run: system_profiler SPHardwareDataType

      - name: Install tooling
        run: make init-ci-test

      - uses: actions/download-artifact@v4
        with:
          name: ${{env.APP_ARTIFACT_NAME}}
          path: ${{env.APP_PATH}}

      - name: Add Microphone permissions
        uses: ./.github/actions/add-microphone-permissions

      - run: ./scripts/ci-boot-simulator.sh --xcode ${{matrix.platform.xcode}}

      - name: Install App
        run: xcrun simctl install booted ${{env.APP_PATH}}

      - name: Run Maestro Flows
        run: |
          maestro test ${{matrix.test.maestro_flows_path}} --format junit --debug-output ${{env.MAESTRO_LOGS_PATH}} --flatten-debug-output

      - name: Store Maestro Logs
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: maestro-logs-${{matrix.platform.xcode}}-${{matrix.test.name}}
          path: ${{env.MAESTRO_LOGS_PATH}}

      - name: Archiving Crash Logs
        uses: actions/upload-artifact@v4
        if: ${{ failure() || cancelled() }}
        with:
          name: crash-logs-${{matrix.platform.xcode}}
          path: ~/Library/Logs/DiagnosticReports/**

      - name: Store screenshot
        uses: ./.github/actions/capture-screenshot
        if: failure()
