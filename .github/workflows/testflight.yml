name: Upload to Testflight
on:
  push:
    branches:
      - main
      - release/**

    paths:
      - "Sources/**"
      - "Samples/iOS-Swift/**"
      - ".github/workflows/testflight.yml"
      - "fastlane/**"
      - "scripts/ci-select-xcode.sh"
      - "scripts/ci-diagnostics.sh"

  pull_request:
    paths:
      - ".github/workflows/testflight.yml"
      - "scripts/ci-diagnostics.sh"
  workflow_dispatch:

# Concurrency configuration:
# - We use workflow-specific concurrency groups to prevent multiple TestFlight uploads of the same build,
#   as these operations involve app building, signing, and upload to Apple's servers.
# - For pull requests, we cancel in-progress runs when testing workflow changes since only the
#   latest configuration needs validation before merging.
# - For main branch pushes (actual uploads), we never cancel uploads to ensure every main branch
#   commit gets properly built and distributed to TestFlight for testing by our team.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  upload_to_testflight:
    name: Build and Upload iOS-Swift to Testflight
    runs-on: macos-15
    steps:
      - uses: actions/checkout@v5
      - run: ./scripts/ci-select-xcode.sh 16.4
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - run: make init-ci-build
      - run: make xcode-ci

      # We upload a new version to TestFlight on every commit on main
      # So we need to bump the build number each time
      - name: Bump Build Version
        env:
          FASTLANE_BUILD_NUMBER: ${{ github.run_number }}
        run: bundle exec fastlane bump_build_number

      - name: Remove preview version suffixes
        run: bundle exec fastlane remove_preview_version_suffixes

      - name: Run Fastlane
        env:
          APP_STORE_CONNECT_KEY_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          APP_STORE_CONNECT_KEY: ${{ secrets.APP_STORE_CONNECT_KEY }}
          FASTLANE_BUNDLE_VERSION: ${{ github.run_number }}
          FASTLANE_KEYCHAIN_PASSWORD: ${{ secrets.FASTLANE_KEYCHAIN_PASSWORD }}
          MATCH_GIT_PRIVATE_KEY: ${{ secrets.MATCH_GIT_PRIVATE_KEY }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_USERNAME: ${{ secrets.MATCH_USERNAME }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        run: |
          bundle exec fastlane build_ios_swift
          bundle exec fastlane ios_swift_to_testflight

      - name: Archiving
        uses: actions/upload-artifact@v4
        with:
          name: dSYMs
          path: |
            ${{ github.workspace }}/iOS-Swift.*
            ${{ github.workspace }}/*.dSYM.zip
            ${{ github.workspace }}/dSYMs/

      - name: Run CI Diagnostics
        if: failure()
        run: ./scripts/ci-diagnostics.sh
