name: "Assemble Sentry Cocoa XCFramework variant"

on:
  workflow_call:
    inputs:
      name:
        description: |-
          The Sentry project target to build an XCFramework slice for.
          Possible values: Sentry, SentrySwiftUI.
        required: true
        type: string

      suffix:
        description: |-
          The suffix to add to the build product name.
          E.g. "-Dynamic" or "-WithoutUIKitOrAppKit".
        required: false
        type: string

      configuration-suffix:
        description: |-
          The suffix to add to the build product name to build an alternate configuration of the target.
          E.g. "WithoutUIKit".
        required: false
        type: string

      variant-id:
        description: |-
          The ID of the variant to build an XCFramework slice for. Used to collect appropriate slices for final deliverable assembly.
          E.g. "sentry-static", "sentry-dynamic" or "sentry-withoutuikit-dynamic"
        required: true
        type: string

      signed:
        description: |-
          Whether or not the assembled XCFramework should be signed.
        required: false
        type: string

      sdks:
        description: |-
          The SDK slices to assemble into an XCFramework.
        required: false
        type: string
        default: "iphoneos,iphonesimulator,macosx,maccatalyst,appletvos,appletvsimulator,watchos,watchsimulator,xros,xrsimulator"

      release-version:
        description: |-
          For release workflows, the version to inject into the SDK.
        required: false
        type: string
        default: ""

jobs:
  assemble-xcframework-variant:
    name: Assemble ${{inputs.name}}${{inputs.suffix}} XCFramework Variant

    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4

      - uses: ruby/setup-ruby@v1
        if: ${{ inputs.signed == '--sign' }}
        with:
          bundler-cache: true

      - name: Get release version
        id: get_version-release
        if: ${{ inputs.release-version != "" }}
        run: echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
        shell: sh

      - name: Get alpha version
        id: get_version-pr-alpha
        if: ${{ inputs.release-version == "" }}
        run: echo "VERSION=$(grep MARKETING_VERSION Sources/Configuration/Versioning.xcconfig | cut -d ' ' -f 3)+${{ github.sha }}" >> $GITHUB_ENV
        shell: sh

      - name: Bump version
        run: |
          ./scripts/ci-select-xcode.sh 15.2
          make bump-version TO=${{ env.VERSION }}

      - name: "Download Fastlane Certificate"
        if: ${{ inputs.signed == '--sign' }}
        run: bundle exec fastlane prepare_xcframework_signing
        env:
          APP_STORE_CONNECT_KEY_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          APP_STORE_CONNECT_KEY: ${{ secrets.APP_STORE_CONNECT_KEY }}
          FASTLANE_KEYCHAIN_PASSWORD: ${{ secrets.FASTLANE_KEYCHAIN_PASSWORD }}
          MATCH_GIT_PRIVATE_KEY: ${{ secrets.MATCH_GIT_PRIVATE_KEY }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_USERNAME: ${{ secrets.MATCH_USERNAME }}
        shell: sh

      - name: Download ${{inputs.variant-id}} Slices
        uses: actions/download-artifact@v4
        with:
          pattern: xcframework-${{inputs.variant-id}}-slice-*
          path: xcframework-slices

      - name: Assemble XCFramework
        run: ./scripts/assemble-xcframework.sh "${{inputs.name}}" "${{inputs.suffix}}" "${{inputs.configuration-suffix}}" "${{inputs.sdks}}" "/Users/runner/work/sentry-cocoa/sentry-cocoa/xcframework-slices/xcframework-${{inputs.variant-id}}-slice-SDK_NAME"
        shell: bash

      - name: Zip XCFramework
        run: ./scripts/zip_built_sdk.sh "${{inputs.signed}}" ${{inputs.name}}${{inputs.suffix}}
        shell: bash

      - name: Upload XCFramework
        uses: actions/upload-artifact@v4
        with:
          name: xcframework-${{github.sha}}-${{inputs.variant-id}}
          if-no-files-found: error
          path: ${{inputs.name}}${{inputs.suffix}}.xcframework.zip
