name: Build
on:
  push:
    branches:
      - master
      - release/**

  pull_request:
    paths:
      - 'Sources/**'
      - 'test-server/**'
      - 'Samples/**'
      - '.github/workflows/**'

jobs:
  # We had issues that the release build was broken on master.
  # With this we catch potential issues already in the PR.
  ios-swift-release:
    name: Release Build of iOS Swift
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v2
      - run: ./scripts/ci-select-xcode.sh 

      - name: Run Fastlane
        env:
          APP_STORE_CONNECT_KEY_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          APP_STORE_CONNECT_KEY: ${{ secrets.APP_STORE_CONNECT_KEY }}
          FASTLANE_KEYCHAIN_PASSWORD: ${{ secrets.FASTLANE_KEYCHAIN_PASSWORD }}
          MATCH_GIT_PRIVATE_KEY: ${{ secrets.MATCH_GIT_PRIVATE_KEY }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_USERNAME: ${{ secrets.MATCH_USERNAME }}
        run: fastlane build_ios_swift
        shell: sh

  build-sample:
    name: Sample ${{ matrix.scheme }}
    runs-on: macos-11
    strategy:
      fail-fast: false
      matrix:
        beforeXcode: ['']
        scheme:
          - macOS-Swift
        # other sample projects are built in ui-tests

        # WatchOS needs Sentry as a XCFramework  
        include:
          - scheme: watchOS-Swift WatchKit App
            beforeXcode: 'make build-for-watchos'

    steps:
      - uses: actions/checkout@v2
      - run: ./scripts/ci-select-xcode.sh
      - run: ${{matrix.beforeXcode}}
      
      # Disable code signing. We just want to make sure these compile.
      - run: >-
          env NSUnbufferedIO=YES
          xcodebuild
          -workspace Sentry.xcworkspace
          -scheme '${{matrix.scheme}}'
          -configuration Debug
          CODE_SIGNING_ALLOWED="NO"
          build

  build-xcframework:
    name: Build & Validate XCFramework
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v2
      - run: make build-xcframework
        shell: sh
      - run: make build-xcframework-sample
        shell: sh

      - name: Archiving XCFramework.zip
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.sha }}
          if-no-files-found: error
          path: |
            ${{ github.workspace }}/*.zip

  # The framework requires Xcode 12          
  build-framework:
    name: Build & Validate Framework
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v2
      - run: ./scripts/ci-select-xcode.sh 12.5.1
      - run: make build-framework
        shell: sh
      - run: make build-framework-sample
        shell: sh

      - name: Archiving Framework.zip
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.sha }}
          if-no-files-found: error
          path: |
            ${{ github.workspace }}/*.zip
 
# Use github.event.pull_request.head.sha instead of github.sha when available as 
# the github.sha is be the pre merge commit id for PRs.
# See https://github.community/t/github-sha-isnt-the-value-expected/17903/17906.
  validate-spm:
    name: Validate Swift Package Manager
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v2
      - name: Set SPM revision to current git commit
        run: >-
          if [[ "${{ github.event.pull_request.head.sha }}" != "" ]]; then
            sed -i '' 's/.branch("master")/.revision("${{ github.event.pull_request.head.sha }}")/g' Samples/macOS-SPM-CommandLine/Package.swift
          else
            sed -i '' 's/.branch("master")/.revision("${{ github.sha }}")/g' Samples/macOS-SPM-CommandLine/Package.swift
          fi  
        shell: bash
      - run: swift build
        working-directory: Samples/macOS-SPM-CommandLine
        shell: sh

  swift-build:
    name: Build with Swift
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v2
      - run: swift build
        shell: sh
