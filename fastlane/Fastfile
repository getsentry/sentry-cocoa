before_all do
  clear_derived_data if is_ci?
  # reset_simulators if is_ci?
end

lane :localcoverage do
    test
    sh('cd ..; slather coverage --input-format profdata Sentry.xcodeproj')
end

lane :oc_lint do
  sh('cd ..; xcodebuild clean; xcodebuild COMPILER_INDEX_STORE_ENABLE=NO | xcpretty -r json-compilation-database --output compile_commands.json')
  oclint(
    max_priority_1: 10,           # The max allowed number of priority 1 violations
    max_priority_2: 100,          # The max allowed number of priority 2 violations
    max_priority_3: 1000,         # The max allowed number of priority 3 violations
    exclude_regex: /SentryCrash/  # Exclude all files matching this regex
  )
end

lane :lint do
    if ENV["DANGER_GITHUB_API_TOKEN"]
        danger(
            github_api_token: ENV["DANGER_GITHUB_API_TOKEN"],
            danger_id: "github",
            dangerfile: "./Dangerfile",
            verbose: true
        )
    end
    sh('cd ..; swiftlint')
end

lane :test do
    scan(scheme: "Sentry", code_coverage: true)
end

lane :pod do
    sh('cd ..; pod lib lint')
end
