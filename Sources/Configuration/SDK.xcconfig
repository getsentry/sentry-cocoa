#include "DeploymentTargets.xcconfig"

SUPPORTED_PLATFORMS = macosx iphoneos iphonesimulator watchos watchsimulator appletvos appletvsimulator xros xrsimulator
TARGETED_DEVICE_FAMILY = 1,2,3,4,7
SKIP_INSTALL = YES
DEFINES_MODULE = YES
DYLIB_COMPATIBILITY_VERSION = 1
DYLIB_CURRENT_VERSION = 1
DYLIB_INSTALL_NAME_BASE = @rpath
MACH_O_TYPE = mh_dylib
FRAMEWORK_VERSION = A

CURRENT_PROJECT_VERSION = 8.0.0

ALWAYS_SEARCH_USER_PATHS = NO
CLANG_ENABLE_OBJC_ARC = YES
CLANG_ENABLE_MODULES = YES
//OTHER_CFLAGS = -Wall -Wextra -Wpedantic -Wno-gnu-conditional-omitted-operand

ONLY_ACTIVE_ARCH[config=Debug] = YES
GCC_OPTIMIZATION_LEVEL[config=Debug] = 0
COPY_PHASE_STRIP[config=Debug] = NO

OTHER_LDFLAGS[sdk=watch*] = $(inherited) -framework WatchKit

SUPPORTS_MACCATALYST = YES

CLANG_CXX_LANGUAGE_STANDARD = c++14
CLANG_CXX_LIBRARY = libc++

// This config is required so the code can access the SentryPrivate module. Removing this setting
// leads to an error Module _SentryPrivate not found in the SentryTests-Swift.h header when import the
// SentryPrivate module with @import _SentryPrivate.
HEADER_SEARCH_PATHS = $(SRCROOT)/Sources/Sentry/include/**

SWIFT_ACTIVE_COMPILATION_CONDITIONS_Debug = DEBUG
SWIFT_ACTIVE_COMPILATION_CONDITIONS_Debug_without_UIKit = DEBUG
SWIFT_ACTIVE_COMPILATION_CONDITIONS_Test = TEST
SWIFT_ACTIVE_COMPILATION_CONDITIONS_TestCI = TESTCI
SWIFT_ACTIVE_COMPILATION_CONDITIONS_Release =
SWIFT_ACTIVE_COMPILATION_CONDITIONS_Release_without_UIKit =
SWIFT_ACTIVE_COMPILATION_CONDITIONS = $(SWIFT_ACTIVE_COMPILATION_CONDITIONS_$(CONFIGURATION))
